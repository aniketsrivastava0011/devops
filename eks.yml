version: 0.2
run-as: root

phases:

  install:
    commands:
      - echo Installing app dependencies...
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl $(which kubectl)
      #- mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client

  pre_build:
    commands:
      - echo checking EKS service access
      - aws eks list-clusters --region us-east-2
      - echo Logging in to Amazon EKS...
      - aws eks --region us-east-2 update-kubeconfig --name devops
      - echo check config 
      - CADATA=$LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXdPVEV5TWpBME4xb1hEVE15TURNd05qRXlNakEwTjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEFaCm9qQUFHSWZkdmp5eTYrdUNodmJHVzNEcUpwYTlOcUxQYmhKaEZKSnhPNE5IbVFQdWNreGRHV25Ma1BDd3JQb04KQ0gwUTdMNHcyaE9WdlpLN0ZTa1pHZGNPeVRVTDdBR2FVQWY1ZVdOVU40MXU2K1ZqdWp2WXlINmloR1krYzZrVwoxcXZ6UXVXU0hNUVI2MWtTNm4zNnQ5c1phdnZCRldtTVdNYlV2SWt0TGJGUVg4NmozNTNncWMzbi9uaHpKSitNCjgwM0NyZGQva3c1ZUUyd0g5VzVFY1B5cm9CLzFUdWF2TGhETUczVVluZkNHTVVNMXFmdit6OGZYWnZWTFBtcVoKdWRzM2NubThTNlhKMS8wSmhMSGNqdyttNWpGQU9DUlRIR2pCMmhUc3dEQjBPRis4LzNkdG41ZDZXQi9wVEtDYwphbFNnNDFnK3JHZzBUWFdCOFpFQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZFSFFJVC9oMVNKemdGV25zanNjSzlONkVMT0FNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDbW5SeXNwUTBleFF2d1g3OTRuU0pzV0lFdmZUbytCTTV4blVlSyt1MjU2WEpEd3Uycwo3UEVmODVJOW1VRjl5YkNhSjRnVENTcThHUHpadmhFcE5jOXMyLzNqTjhCc2JKVnlkTnBnU1hkTVlWcmVqNkx6ClUvR1FTb2hLbThEa1VPYjRFUmJtZkYzeFljZXNjTzZ4Tlh0Z3NsZkR5clNyVVN1NFNTNDd1TWhTVWxwTmpTZG0KalVEMVRCZnUrK3pGN0lOZlp5QXBIUEhyUng2ZERBdjhzZUVJQ05jNUVzT0s2TTM5RjRVc0FyWHhpbkZZNTZ1bQpqaDFoRnlGem5Gc0tRTk5adXI3VUdFN2VxN09ZUzREZm9FSnI4M0tUMGtDd0t2aW50dFNNTXNTRVN5UWIwTmFLCjFSa09tUlE1cXFLK0dWMC8zazB4RVdhdHdhS2VHYU1VSkx4OAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      - echo $CADATA
      - kubectl config set clusters.devops.certificate-authority-data "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXdPVEV5TWpBME4xb1hEVE15TURNd05qRXlNakEwTjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEFaCm9qQUFHSWZkdmp5eTYrdUNodmJHVzNEcUpwYTlOcUxQYmhKaEZKSnhPNE5IbVFQdWNreGRHV25Ma1BDd3JQb04KQ0gwUTdMNHcyaE9WdlpLN0ZTa1pHZGNPeVRVTDdBR2FVQWY1ZVdOVU40MXU2K1ZqdWp2WXlINmloR1krYzZrVwoxcXZ6UXVXU0hNUVI2MWtTNm4zNnQ5c1phdnZCRldtTVdNYlV2SWt0TGJGUVg4NmozNTNncWMzbi9uaHpKSitNCjgwM0NyZGQva3c1ZUUyd0g5VzVFY1B5cm9CLzFUdWF2TGhETUczVVluZkNHTVVNMXFmdit6OGZYWnZWTFBtcVoKdWRzM2NubThTNlhKMS8wSmhMSGNqdyttNWpGQU9DUlRIR2pCMmhUc3dEQjBPRis4LzNkdG41ZDZXQi9wVEtDYwphbFNnNDFnK3JHZzBUWFdCOFpFQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZFSFFJVC9oMVNKemdGV25zanNjSzlONkVMT0FNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDbW5SeXNwUTBleFF2d1g3OTRuU0pzV0lFdmZUbytCTTV4blVlSyt1MjU2WEpEd3Uycwo3UEVmODVJOW1VRjl5YkNhSjRnVENTcThHUHpadmhFcE5jOXMyLzNqTjhCc2JKVnlkTnBnU1hkTVlWcmVqNkx6ClUvR1FTb2hLbThEa1VPYjRFUmJtZkYzeFljZXNjTzZ4Tlh0Z3NsZkR5clNyVVN1NFNTNDd1TWhTVWxwTmpTZG0KalVEMVRCZnUrK3pGN0lOZlp5QXBIUEhyUng2ZERBdjhzZUVJQ05jNUVzT0s2TTM5RjRVc0FyWHhpbkZZNTZ1bQpqaDFoRnlGem5Gc0tRTk5adXI3VUdFN2VxN09ZUzREZm9FSnI4M0tUMGtDd0t2aW50dFNNTXNTRVN5UWIwTmFLCjFSa09tUlE1cXFLK0dWMC8zazB4RVdhdHdhS2VHYU1VSkx4OAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo Logging in to dockerhub...
      - REPOSITORY_URI=$superman0011/devops
      - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
      - docker pull $REPOSITORY_URI:$IMAGE_TAG
      

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build --cache-from $REPOSITORY_URI:$IMAGE_TAG -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG 

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push superman0011/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Push the latest image to cluster
      - kubectl apply -f eks_cicd/deployment.yaml
      - kubectl rollout restart -f eks_cicd/deployment.yaml
