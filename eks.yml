version: 0.2
run-as: root

phases:

  install:
    commands:
      - echo Installing app dependencies...
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl $(which kubectl)
      #- mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client

  pre_build:
    commands:
      - echo checking EKS service access
      - aws eks list-clusters --region us-east-2
      - mkdir ~/.kube
      - touch /.kube/config
      - tee -a /.kube/config <<EOF
      apiVersion: v1
clusters:
- cluster:
    server: https://FAA0D50E03327A35D62F84C8B47868EE.gr7.us-east-2.eks.amazonaws.com
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXdPVEV5TWpBME4xb1hEVE15T>
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: aws
  name: aws
current-context: aws
kind: Config
preferences: {}
users:
- name: aws
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1alpha1
      command: aws
      args:
        - "eks"
        - "get-token"
        - "--cluster-name"
        - "devops"
        # - "--role-arn"
        # - "role-arn"
      # env:
        # - name: AWS_PROFILE
        #   value: "aws-profile"
EOF
      #- echo Logging in to Amazon EKS...
      #- aws eks --region us-east-2 update-kubeconfig --name devops
      #- echo check config 
      #- kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo Logging in to dockerhub...
      - REPOSITORY_URI=$superman0011/devops
      - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
      - docker pull $REPOSITORY_URI:$IMAGE_TAG
      

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build --cache-from $REPOSITORY_URI:$IMAGE_TAG -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG 

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push superman0011/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Push the latest image to cluster
      - kubectl apply -f eks_cicd/deployment.yaml
      - kubectl rollout restart -f eks_cicd/deployment.yaml
